!function(e){var t={};function a(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=e,a.c=t,a.d=function(e,t,r){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(a.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)a.d(r,n,function(t){return e[t]}.bind(null,n));return r},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=35)}([function(e,t,a){"use strict";t.a=(e=>({errors:{name:e}}))},function(e,t,a){"use strict";a.d(t,"a",function(){return b});var r=a(9);a.n(r).a.config();const{DB_URL:n,DB_NAME:s,USERS_COLLECTION:o,ORGANISATIONS_COLLECTION:c,TEST_DB_URL:i,TEST_DB_NAME:u,TEST_USERS_COLLECTION:O,TEST_ORGANISATIONS_COLLECTION:d,SECRET:l,SALT_ROUNDS:h}=process.env,j=process.env.PORT||8e3,T={FRONTEND_URL:"http://localhost:8080"};T.FRONTEND_URL="https://the-remotants.netlify.com";const b={DB_URL:n,DB_NAME:s,USERS_COLLECTION:o,ORGANISATIONS_COLLECTION:c,SECRET:l,SALT_ROUNDS:h,ONE_DAY:604800,ONE_HOUR:3600,PORT:j,URLS:T,ERROR_CODES:{BAD_REQUEST:400,UNAUTHORIZED:401,FORBIDDEN:403,NOT_FOUND:404,TOO_MANY_REQUESTS:429,SERVER_ERROR:500}}},function(e,t,a){"use strict";a.d(t,"a",function(){return r}),a.d(t,"b",function(){return s}),a.d(t,"f",function(){return n}),a.d(t,"i",function(){return i}),a.d(t,"h",function(){return u}),a.d(t,"e",function(){return O}),a.d(t,"d",function(){return d}),a.d(t,"g",function(){return o});const r={Register:"/register",Login:"/login",GitHub:"/github/authenticate/:code",WakaTime:"/wakatime/authenticate/:code"},n={Setup:"/setup",Update:"/update/:id",Get:"/:id",List:"/list",Invite:"/invite",Manager:{List:"/manager/list"}},s={BasicSetup:"/setup-1",OAuthSetup:"/setup-2",Organisation:"/organisation",WakaTime:"/api/wakatime",GitHub:"/api/github",User:"/user"},o={Get:"/:id"},c="https://wakatime.com/api/v1",i={Projects:"/users/current/projects",ProjectCommits:"/users/current/projects/:project/commits",Durations:"/users/current/durations",UserDetails:"/users/current",OrganisationMemberStats:"/users/all/:userID",Stats:"/users/current/stats/:dateRange",Summaries:"/users/current/summaries",IfTokenExists:"/users/checkToken"},u={Projects:`${c}/users/current/projects`,Durations:`${c}/users/current/durations`,UserDetails:`${c}/users/current`,Stats:`${c}/users/current/stats`,Summaries:`${c}/users/current/summaries`},O={Issues:"/user/issues",Repos:"/user/repos",RepoPullRequests:"/user/repos/:owner/:repo/pulls",IfTokenExists:"/users/checkToken"},d={Issues:"https://api.github.com/user/issues",Repos:"https://api.github.com/user/repos",RepoPullRequests:"https://api.github.com/repos"};t.c={Home:"/",Test:"/test",Auth:"/auth",Dashboard:"/dashboard",InviteAuth:"/invite/auth"}},function(e,t,a){"use strict";t.a=((e,t)=>void 0===t||null===t?{success:!0}:{success:!0,[e]:t})},function(e,t,a){"use strict";a.d(t,"a",function(){return i});var r=a(31),n=a(1);const s=n.a.DB_URL,{DB_NAME:o}=n.a;let c;const i=async()=>{if(await(async()=>(void 0===c&&(c=await r.MongoClient.connect(s,{useNewUrlParser:!0})),c))(),void 0===c)throw new Error("No connection instance present");return c.db(o)}},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("axios")},function(e,t,a){"use strict";var r=a(0),n=a(1);const{ERROR_CODES:s}=n.a;t.a=(e=>{switch(e.response.status){case s.BAD_REQUEST:return Object(r.a)("Bad Request");case s.UNAUTHORIZED:return Object(r.a)("Unauthorized");case s.FORBIDDEN:return Object(r.a)("You don't have permissions to access this section!");case s.NOT_FOUND:return Object(r.a)("Not found");case s.TOO_MANY_REQUESTS:return Object(r.a)("Too many requests");case s.SERVER_ERROR:return Object(r.a)("Server error");default:return Object(r.a)("Caught an error while making API request to WakaTime")}})},function(e,t,a){"use strict";a.d(t,"a",function(){return O}),a.d(t,"b",function(){return d});var r=a(11),n=a.n(r),s=a(4),o=a(1),c=a(17),i=a(0),u=a(3);const O=e=>{return n.a.sign({email:e},o.a.SECRET,{expiresIn:Math.floor((new Date).getTime()/1e3)+ +o.a.ONE_DAY})},d=async e=>{return await n.a.verify(e,o.a.SECRET,async(e,t)=>{if(e)return Object(i.a)("Failed to authenticate");const{email:a}=t,r=await Object(s.a)();try{const e=await Object(c.a)(r,"users",a);return null===e?Object(i.a)("No such user"):Object(u.a)("user",e)}catch(e){return Object(i.a)("Caught an error while checking if the user exists or not.")}})}},function(e,t){e.exports=require("dotenv")},function(e,t){e.exports=require("shortid")},function(e,t){e.exports=require("jsonwebtoken")},function(e,t,a){"use strict";a.d(t,"b",function(){return o}),a.d(t,"a",function(){return c});var r=a(21),n=a.n(r),s=a(1);const o=async e=>{return await n.a.hash(e,Number(s.a.SALT_ROUNDS))},c=async(e,t)=>{return await n.a.compare(e,t)}},function(e,t,a){"use strict";var r=a(17),n=a(0),s=a(3);t.a=(async(e,t,a)=>{try{const o=(await Object(r.a)(e,t,a)).id;return Object(s.a)("userID",o)}catch(e){return Object(n.a)("Error fetching user ID")}})},function(e,t,a){"use strict";var r=a(5),n=a.n(r),s=a(6),o=a.n(s),c=a(2),i=a(4),u=a(1),O=a(0),d=a(3),l=a(7);var h=async(e,t,a)=>{try{const r=await e.collection(t).find({id:a}).project({_id:0}).toArray(),[n]=r;return null===n||void 0===n?Object(O.a)("User not found"):Object(d.a)("token",n.wakatime.access_token)}catch(e){return Object(O.a)("Error fetching user")}};a.d(t,"b",function(){return T});const j=n.a.Router(),T=async(e,t,a)=>{try{const r=await e.collection(t).find({email:a}).project({_id:0,"wakatime.access_token":1}).toArray(),[n]=r;if(void 0===n.wakatime)return Object(O.a)("You need to connect your WakaTime account!");const s=n.wakatime.access_token;return void 0===s?Object(O.a)("You need to connect your WakaTime account!"):Object(d.a)("token",s)}catch(e){return console.log(e),void 0===e.response?Object(O.a)("Caught an error while making API request to WakaTime"):Object(l.a)(e)}},b=async(e,t)=>{const a={method:"GET",headers:{Authorization:`Bearer ${e}`}};try{const e=await o()(`${c.h.Durations}?date=${t}`,a),{data:r}=e.data,n=(e=>{const t=new Map;e.forEach(e=>{const a=t.get(e.project);void 0===a?t.set(e.project,e.duration):t.set(e.project,a+e.duration)});const a=[];return t.forEach((e,t)=>{a.push({project:t,duration:e})}),a})(r);return Object(d.a)("data",n)}catch(e){return void 0===e.response?Object(O.a)("Caught an error while making API request to WakaTime"):Object(l.a)(e)}},m=async(e,t)=>{const a={method:"GET",headers:{Authorization:`Bearer ${e}`}};try{const e=await o()(`${c.h.Stats}/${t}`,a),{data:r}=e.data;return Object(d.a)("data",r)}catch(e){return void 0===e.response?Object(O.a)("Caught an error while making API request to WakaTime"):Object(l.a)(e)}};j.get(c.i.Projects,async(e,t)=>{const{currentUser:a}=e,r=await Object(i.a)(),n=u.a.USERS_COLLECTION,{success:s,token:h,errors:j}=await T(r,n,a);let b;if(!0===s){const e=await(async e=>{const t={method:"GET",headers:{Authorization:`Bearer ${e}`}};try{const e=await o()(c.h.Projects,t),{data:a}=e.data;return Object(d.a)("data",a)}catch(e){return void 0===e.response?Object(O.a)("Caught an error while making API request to WakaTime"):Object(l.a)(e)}})(h);b=!0!==e.success?{errors:e.errors}:e}else b={errors:j};t.json(b)}),j.get(c.i.ProjectCommits,async(e,t)=>{const a=e.params.project,{currentUser:r}=e,n=await Object(i.a)(),s=u.a.USERS_COLLECTION,{success:h,token:j,errors:b}=await T(n,s,r);let m;if(!0===h){const e=await(async(e,t)=>{const a={method:"GET",headers:{Authorization:`Bearer ${e}`}};try{const e=await o()(`${c.h.Projects}/${t}/commits`,a),{data:r}=e;return Object(d.a)("data",r)}catch(e){return void 0===e.response?Object(O.a)("Caught an error while making API request to WakaTime"):Object(l.a)(e)}})(j,a);m=!0!==e.success?{errors:e.errors}:e}else m={errors:b};t.json(m)}),j.get(c.i.Durations,async(e,t)=>{const{date:a}=e.query,{currentUser:r}=e,n=await Object(i.a)(),s=u.a.USERS_COLLECTION,{success:o,token:c,errors:O}=await T(n,s,r);let d;if(!0===o){const e=await b(c,a);d=!0!==e.success?{errors:e.errors}:e}else d={errors:O};t.json(d)}),j.get(c.i.Stats,async(e,t)=>{const{dateRange:a}=e.params,{currentUser:r}=e,n=await Object(i.a)(),s=u.a.USERS_COLLECTION,{success:o,token:c,errors:O}=await T(n,s,r);let d;if(!0===o){const e=await m(c,a);d=!0!==e.success?{errors:e.errors}:e}else d={errors:O};t.json(d)}),j.get(c.i.Summaries,async(e,t)=>{const{start:a,end:r}=e.query,{currentUser:n}=e,s=await Object(i.a)(),h=u.a.USERS_COLLECTION,{success:j,token:b,errors:m}=await T(s,h,n);let g;if(!0===j){const e=await(async(e,{start:t,end:a})=>{const r={method:"GET",headers:{Authorization:`Bearer ${e}`}};try{const e=await o()(`${c.h.Summaries}?start=${t}&end=${a}`,r),{data:n}=e.data;return Object(d.a)("data",n)}catch(e){return void 0===e.response?Object(O.a)("Caught an error while making API request to WakaTime"):Object(l.a)(e)}})(b,{start:a,end:r});g=!0!==e.success?{errors:e.errors}:e}else g={errors:m};t.json(g)}),j.get(c.i.UserDetails,async(e,t)=>{const{currentUser:a}=e,r=await Object(i.a)(),n=u.a.USERS_COLLECTION,{success:s,token:h,errors:j}=await T(r,n,a);let b;if(!0===s){const e=await(async e=>{const t={method:"GET",headers:{Authorization:`Bearer ${e}`}};try{const e=await o()(c.h.UserDetails,t),{data:a}=e.data;return Object(d.a)("data",a)}catch(e){return void 0===e.response?Object(O.a)("Caught an error while making API request to WakaTime"):Object(l.a)(e)}})(h);b=!0!==e.success?{errors:e.errors}:e}else b={errors:j};t.json(b)}),j.get(c.i.OrganisationMemberStats,async(e,t)=>{const{userID:a}=e.params,r=await Object(i.a)(),n=u.a.USERS_COLLECTION,{success:s,token:o,errors:c}=await h(r,n,a);if(!0!==s)return void t.json({errors:c});let O;const d=await m(o,"last_7_days");O=!0!==d.success?{errors:d.errors}:d,t.json(O)}),j.get(c.i.IfTokenExists,async(e,t)=>{const{currentUser:a}=e,r=await Object(i.a)(),n=u.a.USERS_COLLECTION,s=await T(r,n,a);!0===s.success?t.json(Object(d.a)()):"You need to connect your WakaTime account!"===s.errors.name?t.json({success:!1}):t.json({errors:s.errors})});t.a=j},function(e,t,a){"use strict";var r=a(10),n=a.n(r),s=a(0),o=a(3);var c=async(e,t,a)=>{try{const r=await e.collection(t).find({id:a}).project({_id:0}).toArray(),[n]=r;return void 0===n?Object(s.a)("No such user exists"):Object(o.a)("data",n)}catch(e){return Object(s.a)("Error fetching user")}},i=a(1),u=a(6),O=a.n(u),d=a(2),l=a(7);var h=async e=>{const t={method:"GET",headers:{Authorization:`Bearer ${e}`}};try{const e=await O()(d.h.UserDetails,t),{data:a}=e.data;return Object(o.a)("data",a)}catch(e){return void 0===e.response?Object(s.a)("Caught an error while making API request to WakaTime"):Object(l.a)(e)}};const j=e=>{const t=[];return e.forEach(e=>{if(!0===e.success){const{id:a,name:r,email:n}=e.data,s={id:a,name:r,email:n};t.push(s)}}),t},T=(e,t,a)=>{const r=[];for(let n=0;n<a.length;n+=1){const s=a[n],o=c(e,t,s);r.push(o)}return r},b={registerOrganisation:async(e,t,{name:a,description:r,ownerID:c})=>{try{return 0===await e.collection(t).count({name:a})?await(async(e,t,{name:a,description:r,ownerID:c})=>{const i=n.a.generate().toLowerCase();try{return await e.collection(t).insertOne({id:i,name:a,description:r,ownerID:c,employee:[],manager:[]}),Object(o.a)()}catch(e){return Object(s.a)("Caught an error while adding organisation to the Database.")}})(e,t,{name:a,description:r,ownerID:c}):Object(s.a)("Organisation exists")}catch(e){return Object(s.a)("Caught an error while registering org.")}},listOrganisations:async(e,t,a,r)=>{try{const n=await e.collection(t).find({ownerID:a}).project({_id:0,ownerID:0}).toArray();if(0===n.length)return Object(s.a)("This user doesn't own any organisation");const c=i.a.USERS_COLLECTION,u=await Promise.all(n.map(async t=>{const a=t.manager,r=T(e,c,a),n=await Promise.all(r),s=j(n),o=t.employee,i=T(e,c,o),u=await Promise.all(i),O=j(u);return{...t,manager:s,employee:O}})),{success:O,data:d,errors:l}=await h(r),b=d;if(!0!==O)return{errors:l};const m=u.map(e=>({...e,wakatime:b}));return Object(o.a)("data",m)}catch(e){return Object(s.a)("Caught an error while fetching organisations.")}}};t.a=b},function(e,t,a){"use strict";var r=a(0),n=a(3);t.a=(async(e,t,a)=>{try{return 0===await e.collection(t).count({username:a})?Object(n.a)():Object(r.a)("Username already exists.")}catch(e){return Object(r.a)("Caught an error while finding if username exists or not")}})},function(e,t,a){"use strict";var r=a(0);t.a=(async(e,t,a)=>{try{const n=await e.collection(t).find({email:a}).project({_id:0}).toArray(),[s]=n;return void 0===s?null:s}catch(e){return Object(r.a)("Error fetching user")}})},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("querystring")},function(e,t,a){"use strict";t.a=(async(e,t,a)=>{try{const r=await e.collection(t).find({id:a}).project({_id:0,ownerID:1}).toArray(),[n]=r,s=n.ownerID;return void 0===s?null:s}catch(e){return"Error fetching owner id"}})},function(e,t){e.exports=require("bcrypt")},function(e,t){e.exports=require("body-parser")},function(e,t,a){"use strict";var r=a(5),n=a.n(r),s=a(8),o=a(0),c=a(2),i=a(4),u=a(1),O=a(16),d=a(3);const l=n.a.Router();l.post(c.c.Home,async(e,t)=>{const{currentUser:a}=e,r=await Object(i.a)(),n=u.a.USERS_COLLECTION,s=await(async(e,t,a,r)=>{const{name:n,username:s}=r,c=await Object(O.a)(e,t,s);if(!0!==c.success)return c;try{return await e.collection(t).update({email:a},{$set:{name:n,username:s}}),Object(d.a)()}catch(e){return Object(o.a)("[Update]: Caught an error while updating user details.")}})(r,n,a,e.body);t.json(s)});var h=l,j=a(30),T=a.n(j),b=a(19),m=a.n(b),g=a(9);a.n(g).a.config();const{OAUTH_PORT:w,OAUTH_METHOD:p,OAUTH_GITHUB_CLIENT_ID:E,OAUTH_GITHUB_CLIENT_SECRET:_,OAUTH_GITHUB_HOST:f,OAUTH_GITHUB_PATH:I,OAUTH_WAKATIME_CLIENT_ID:y,OAUTH_WAKATIME_CLIENT_SECRET:R,OAUTH_WAKATIME_HOST:C,OAUTH_WAKATIME_PATH:A}=process.env;var U={OAUTH_PORT:w,OAUTH_METHOD:p,OAUTH_GITHUB_CLIENT_ID:E,OAUTH_GITHUB_CLIENT_SECRET:_,OAUTH_GITHUB_HOST:f,OAUTH_GITHUB_PATH:I,OAUTH_GITHUB_REDIRECT_URI:`${u.a.URLS.FRONTEND_URL}/setup-2?auth=github`,OAUTH_WAKATIME_CLIENT_ID:y,OAUTH_WAKATIME_CLIENT_SECRET:R,OAUTH_WAKATIME_HOST:C,OAUTH_WAKATIME_PATH:A,OAUTH_WAKATIME_REDIRECT_URI:`${u.a.URLS.FRONTEND_URL}/setup-2?auth=wakatime`};const S=n.a.Router(),L=async(e,t,a,r,n)=>{try{return await e.collection(t).update({email:a},{$set:{[r]:n}}),Object(d.a)()}catch(e){return Object(o.a)("Caught an error at the time of storing auth details")}},N=(e,t,a)=>{const{data:r,reqOptions:n}=((e,t)=>{let a,r;return"github"===e?(a=m.a.stringify({client_id:U.OAUTH_GITHUB_CLIENT_ID,client_secret:U.OAUTH_GITHUB_CLIENT_SECRET,redirect_uri:U.OAUTH_GITHUB_REDIRECT_URI,code:t}),r={host:U.OAUTH_GITHUB_HOST,port:U.OAUTH_PORT,path:U.OAUTH_GITHUB_PATH,method:U.OAUTH_METHOD,headers:{"Content-Type":"application/x-www-form-urlencoded","content-length":a.length}}):"wakatime"===e&&(a=m.a.stringify({client_id:U.OAUTH_WAKATIME_CLIENT_ID,client_secret:U.OAUTH_WAKATIME_CLIENT_SECRET,redirect_uri:U.OAUTH_WAKATIME_REDIRECT_URI,grant_type:"authorization_code",code:t}),r={host:U.OAUTH_WAKATIME_HOST,port:U.OAUTH_PORT,path:U.OAUTH_WAKATIME_PATH,method:U.OAUTH_METHOD,headers:{"Content-Type":"application/x-www-form-urlencoded","content-length":a.length}}),{data:a,reqOptions:r}})(e,t);let s="";const o=T.a.request(n,e=>{e.setEncoding("utf8"),e.on("data",e=>{s+=e}),e.on("end",()=>{a(null,m.a.parse(s))})});o.write(r),o.end(),o.on("error",e=>{a(e)})};S.all("*",(e,t,a)=>{t.header("Access-Control-Allow-Origin","*"),t.header("Access-Control-Allow-Methods","GET, POST, OPTIONS"),t.header("Access-Control-Allow-Headers","Content-Type"),a()}),S.get(c.a.GitHub,(e,t)=>{N("github",e.params.code,async(a,r)=>{const n={};if(null!==a)n.errors={name:"Got an error while connecting to GitHub"};else{const t=r;n.token=t.access_token;const{currentUser:a}=e,s=await Object(i.a)(),o=u.a.USERS_COLLECTION,{success:c,errors:O}=await L(s,o,a,"github",t);!0===c?n.success=c:n.errors=O}t.json(n)})}),S.get(c.a.WakaTime,(e,t)=>{N("wakatime",e.params.code,async(a,r)=>{const n={};if(null!==a)n.errors={name:"Got an error while connecting to WakaTime"};else{let[t]=Object.keys(r);t=JSON.parse(t),n.token=t.access_token;const{currentUser:a}=e,s=await Object(i.a)(),o=u.a.USERS_COLLECTION,{success:c,errors:O}=await L(s,o,a,"wakatime",t);!0===c?n.success=c:n.errors=O}t.json(n)})});var v=S,H=a(29),D=a(14),k=a(6),G=a.n(k);const P=n.a.Router(),M=async(e,t,a)=>{try{const r=await e.collection(t).find({email:a}).project({_id:0,"github.access_token":1}).toArray(),[n]=r;if(void 0===n.github)return Object(o.a)("You need to connect your GitHub account!");const s=n.github.access_token;return void 0===s?Object(o.a)("You need to connect your GitHub account!"):Object(d.a)("token",s)}catch(e){return Object(o.a)("Caught an error while getting details from Mongo")}};P.get(c.e.Issues,async(e,t)=>{const{currentUser:a}=e,r=await Object(i.a)(),n=u.a.USERS_COLLECTION,{success:s,token:O,errors:l}=await M(r,n,a);let h;if(!0===s){const e={method:"GET",headers:{Authorization:`Bearer ${O}`}};try{const t=await G()(c.d.Issues,e);h=Object(d.a)("data",t.data)}catch(e){h=Object(o.a)("Caught an error while making request to Github")}}else h={errors:l};t.json(h)}),P.get(c.e.Repos,async(e,t)=>{const{currentUser:a}=e,r=await Object(i.a)(),n=u.a.USERS_COLLECTION,{success:s,token:O,errors:l}=await M(r,n,a);let h;if(!0===s){const e={method:"GET",headers:{Authorization:`Bearer ${O}`}};try{const t=await G()(c.d.Repos,e);h=Object(d.a)("data",t.data)}catch(e){h=Object(o.a)("Caught an error while making request to Github")}}else h={errors:l};t.json(h)}),P.get(c.e.RepoPullRequests,async(e,t)=>{const a=e.params.repo,r=e.params.owner,{currentUser:n}=e,s=await Object(i.a)(),O=u.a.USERS_COLLECTION,{success:l,token:h,errors:j}=await M(s,O,n);let T;if(!0===l){const e={method:"GET",headers:{Authorization:`Bearer ${h}`}};try{const t=await G()(`${c.d.RepoPullRequests}/${r}/${a}/pulls`,e),{data:n}=t;T=Object(d.a)("data",n)}catch(e){T=403===e.response.status?Object(o.a)("You don't have permissions to access this section"):Object(o.a)("Caught an error while fetching data from GitHub")}}else T={errors:j};t.json(T)}),P.get(c.e.IfTokenExists,async(e,t)=>{const{currentUser:a}=e,r=await Object(i.a)(),n=u.a.USERS_COLLECTION,s=await M(r,n,a);!0===s.success?t.json(Object(d.a)()):"You need to connect your GitHub account!"===s.errors.name?t.json({success:!1}):t.json({errors:s.errors})});var B=P;const x=n.a.Router();x.get(c.g.Get,async(e,t)=>{const a=await Object(i.a)(),r=u.a.USERS_COLLECTION,n=e.params.id,s=await(async(e,t,a)=>{try{const r=await e.collection(t).find({id:a}).project({_id:0,username:1,name:1}).toArray(),[n]=r;return void 0===n?null:n}catch(e){return Object(o.a)("Error finding user")}})(a,r,n);null===s?t.json(Object(o.a)("This user does not exist")):t.json(s)});var q=x;const $=n.a.Router();$.use(async(e,t,a)=>{const r=e.headers.authorization;let n;if(r&&([,n]=r.split(" ")),n)try{const{success:r,user:c,errors:i}=await Object(s.b)(n);!0===r?(e.currentUser=c.email,a()):t.json(i)}catch(e){const a=Object(o.a)("Caught an error at the time of verifying token.");t.json(a)}else{const e=Object(o.a)("No token provided");t.json(e)}}),$.use(c.b.BasicSetup,h),$.use(c.b.OAuthSetup,v),$.use(c.b.Organisation,H.a),$.use(c.b.WakaTime,D.a),$.use(c.b.GitHub,B),$.use(c.b.User,q),$.get(c.c.Home,(e,t)=>{t.json(Object(d.a)())});t.a=$},function(e,t,a){"use strict";var r=a(5),n=a.n(r),s=a(10),o=a.n(s),c=a(1),i=a(8),u=a(12),O=a(3),d=a(0),l=a(4),h=a(16),j=a(2);const T=n.a.Router(),b=async(e,t,a,{userID:r,email:n,password:s,username:o,name:c,organisation:i,manager:l})=>{try{const j=await e.collection(t).find({email:n}).project({_id:0}).toArray(),[T]=j;if(void 0!==T)try{await e.collection(t).remove({email:n}),await e.collection(a).update({id:i},{$pull:{manager:T.id,employee:T.id}},{multi:!0})}catch(e){return Object(d.a)("[Register]: Caught an error while registering user.")}try{const{success:a,errors:i}=await(async(e,t,{userID:a,email:r,password:n,username:s,name:o})=>{try{const c=await Object(h.a)(e,t,s);if(!0!==c.success)return c;const i=await Object(u.b)(n);return await e.collection(t).insertOne({id:a,email:r,password:i,username:s,name:o}),Object(O.a)()}catch(e){return Object(d.a)("[Register]: Caught an error while adding/updating user")}})(e,t,{userID:r,email:n,password:s,username:o,name:c});if(!0!==a)return{errors:i}}catch(e){return Object(d.a)("[Register]: Caught an error while adding user to the database")}try{const{success:t,errors:n}=await(async(e,t,{userID:a,organisation:r,manager:n})=>{try{return 0===n?await e.collection(t).update({id:r},{$push:{employee:a}}):await e.collection(t).update({id:r},{$push:{manager:a}}),Object(O.a)()}catch(e){return Object(d.a)("Caught an error while joining the organisation")}})(e,a,{userID:r,organisation:i,manager:l});return!0!==t?{errors:n}:Object(O.a)()}catch(e){return Object(d.a)("[Register]: Caught an error while adding user to the database")}}catch(e){return Object(d.a)("[Register]: Caught an error while registering the user to the organisation")}};T.post(j.c.Home,async(e,t)=>{const a=await Object(l.a)(),r=c.a.USERS_COLLECTION,n=c.a.ORGANISATIONS_COLLECTION,s=e.body,u=o.a.generate().toLowerCase(),d=await b(a,r,n,{...s,userID:u});let h;if(!0===d.success){const e=Object(i.a)(s.email);h=Object(O.a)("token",e)}else h={errors:d.errors};t.json(h)}),t.a=T},function(e,t,a){"use strict";a.d(t,"a",function(){return o});var r=a(11),n=a.n(r),s=(a(4),a(1));a(15),a(0),a(3);const o=(e,t,a)=>{return n.a.sign({email:e,manager:t,organisation:a},s.a.SECRET,{expiresIn:Math.floor(Date.now()/1e3)+ +s.a.ONE_HOUR})}},function(e,t){e.exports=require("nodemailer-promise")},function(e,t,a){"use strict";var r=a(26),n=a.n(r),s=a(9);a.n(s).a.config();const{MAILER_USER:o,MAILER_PASS:c}=process.env,i=n.a.config({from:"the-remotants@gmail.com",host:"smtp.gmail.com",secureConnection:!0,port:465,transportMethod:"SMTP",auth:{user:o,pass:c}});t.a=i},function(e,t){e.exports=require("ejs")},function(e,t,a){"use strict";(function(e){var r=a(5),n=a.n(r),s=a(28),o=a.n(s),c=a(18),i=a.n(c),u=a(4),O=a(1),d=a(13),l=a(15),h=a(2),j=a(20),T=a(0),b=a(3),m=a(14),g=a(27),w=a(25);const p=n.a.Router(),{registerOrganisation:E,listOrganisations:_}=l.a,f=async(e,t,a)=>{try{const r=await e.collection(t).find({id:a}).project({_id:0}).toArray(),[n]=r;return void 0===n?null:Object(b.a)("data",n)}catch(e){return Object(T.a)("Error finding organisation")}};p.post(h.f.Setup,async(e,t)=>{const{currentUser:a}=e,r=await Object(u.a)(),n=O.a.USERS_COLLECTION,s=O.a.ORGANISATIONS_COLLECTION,o=await Object(d.a)(r,n,a);if(!0!==o.success)t.json(Object(T.a)("Could not fetch User ID"));else{const a=await E(r,s,{...e.body,ownerID:o.userID});t.json(a)}}),p.get(h.f.List,async(e,t)=>{const{currentUser:a}=e,r=await Object(u.a)(),n=O.a.USERS_COLLECTION,s=O.a.ORGANISATIONS_COLLECTION,o=await Object(d.a)(r,n,a);if(!0!==o.success)t.json(Object(T.a)("Could not fetch User ID"));else{const{success:e,token:c,errors:i}=await Object(m.b)(r,n,a);if(!1===e)t.json(i);else{const e=await _(r,s,o.userID,c);t.json(e)}}}),p.get(h.f.Get,async(e,t)=>{const a=await Object(u.a)(),r=O.a.ORGANISATIONS_COLLECTION,n=e.params.id,s=await f(a,r,n);null===s?t.json(Object(T.a)("This organisation does not exist")):t.json(s)}),p.post(h.f.Update,async(e,t)=>{const a=e.params.id,r=await Object(u.a)(),n=O.a.USERS_COLLECTION,s=O.a.ORGANISATIONS_COLLECTION,o=await Object(j.a)(r,s,a),{currentUser:c}=e;if((await Object(d.a)(r,n,c)).userID!==o)t.json(Object(T.a)("You are not the owner"));else{const n=await(async(e,t,a,r)=>{const{name:n,description:s}=r;try{return await e.collection(t).update({id:a},{$set:{name:n,description:s}}),Object(b.a)()}catch(e){return Object(T.a)("[Register]: Caught an error while updating organisation details.")}})(r,s,a,e.body);t.json(n)}}),p.post(h.f.Invite,async(t,a)=>{const{emails:r,manager:n,organisationID:s}=t.body,c=JSON.parse(r),l=await Object(u.a)(),h=O.a.USERS_COLLECTION,m=O.a.ORGANISATIONS_COLLECTION,p=await Object(j.a)(l,m,s),{currentUser:E}=t;if((await Object(d.a)(l,h,E)).userID!==p)a.json(Object(T.a)("You are forbidden to invite other members"));else{const t=await f(l,m,s),{URLS:{FRONTEND_URL:r}}=O.a;c.forEach(c=>{const u=Object(w.a)(c,n,s);o.a.renderFile(i.a.join(e,"./inviteMail.ejs"),{email:c,organisation:t.name,manager:n,token:u,URL:r},async(e,t)=>{if(e)a.json(Object(T.a)(`Caught error while fetching email template! ${e}`));else try{const e={from:"theremotants@gmail.com",to:c,subject:"[Invite] You are invited",html:t};await Object(g.a)(e)}catch(e){a.json(Object(T.a)("Caught error while sending mail!"))}})}),a.json(Object(b.a)())}}),t.a=p}).call(this,"/")},function(e,t){e.exports=require("https")},function(e,t){e.exports=require("mongodb")},function(e,t,a){"use strict";var r=a(5),n=a.n(r),s=a(10),o=a.n(s),c=a(4),i=a(8),u=a(12),O=a(1),d=a(2),l=a(0),h=a(3);const j=n.a.Router(),T=async(e,t,{id:a,email:r,password:n})=>{try{if(0===await e.collection(t).count({email:r})){return await(async(e,t,{id:a,email:r,password:n})=>{try{const s=await Object(u.b)(n);return await e.collection(t).insertOne({id:a,email:r,password:s}),Object(h.a)()}catch(e){return Object(l.a)("[Register]: Caught an error while adding/updating user")}})(e,t,{id:a,email:r,password:n})}return Object(l.a)("User exists")}catch(e){return Object(l.a)("[Register]: Caught an error while registering user.")}};j.post(d.a.Register,async(e,t)=>{const a=await Object(c.a)(),r=O.a.USERS_COLLECTION,n=e.body,s=o.a.generate().toLowerCase(),u=await T(a,r,{...n,id:s});let d;if(!0===u.success){const e=Object(i.a)(n.email);d=Object(h.a)("token",e)}else d={errors:u.errors};t.json(d)}),j.post(d.a.Login,async(e,t)=>{const a=await Object(c.a)(),r=O.a.USERS_COLLECTION,n=e.body,s=await(async(e,t,{email:a,password:r})=>{try{const n=await e.collection(t).findOne({email:a});if(null===n)return Object(l.a)("Email entered is incorrect");const s=n.password;if(!1===await Object(u.a)(r,s))return Object(l.a)("Password entered is incorrect");const o=Object(i.a)(n.email);return Object(h.a)("token",o)}catch(e){return Object(l.a)("[Login]: Caught an error while getting user from the database.")}})(a,r,n);t.json(s)}),t.a=j},function(e,t){e.exports=require("cors")},function(e,t){e.exports=require("morgan")},function(e,t,a){"use strict";a.r(t),function(e){var r=a(5),n=a.n(r),s=a(34),o=a.n(s),c=a(33),i=a.n(c),u=a(22),O=a(18),d=a.n(O),l=a(32),h=a(23),j=a(24),T=a(1),b=a(2);const m=n()();m.use(o()("dev")),m.use(i()()),m.use(Object(u.json)()),m.use(Object(u.urlencoded)({extended:!0})),m.use(b.c.Auth,l.a),m.use(b.c.Dashboard,h.a),m.use(b.c.InviteAuth,j.a),m.set("views",d.a.join(e,"./views")),m.set("view engine","ejs"),m.get(b.c.Home,(e,t)=>{t.send("Roll over to /test to see it it's working or not")}),m.get(b.c.Test,(e,t)=>{t.json({status:"Working!"})});const g=m.listen(T.a.PORT,()=>{console.log(`Backend is running on PORT: ${T.a.PORT}`)});t.default=g}.call(this,"/")}]);
